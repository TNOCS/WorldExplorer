// ------------------------------------------------------------------------------
// <auto-generated>
//    Generated by avrogen, version 1.7.7.5
//    Changes to this file may cause incorrect behavior and will be lost if code
//    is regenerated
// </auto-generated>
// ------------------------------------------------------------------------------
namespace eu.driver.model.worldexplorer
{
	using System;
	using System.Collections.Generic;
	using System.Text;
	using global::Avro;
	using global::Avro.Specific;
	
	public partial class View : ISpecificRecord
	{
		public static Schema _SCHEMA = Schema.Parse("{\"type\":\"record\",\"name\":\"View\",\"namespace\":\"eu.driver.model.worldexplorer\",\"field" +
				"s\":[{\"name\":\"lat\",\"type\":\"float\"},{\"name\":\"lon\",\"type\":\"float\"},{\"name\":\"zoom\",\"" +
				"type\":\"int\"},{\"name\":\"range\",\"type\":\"int\"}]}");
		private float _lat;
		private float _lon;
		private int _zoom;
		private int _range;
		public virtual Schema Schema
		{
			get
			{
				return View._SCHEMA;
			}
		}
		public float lat
		{
			get
			{
				return this._lat;
			}
			set
			{
				this._lat = value;
			}
		}
		public float lon
		{
			get
			{
				return this._lon;
			}
			set
			{
				this._lon = value;
			}
		}
		public int zoom
		{
			get
			{
				return this._zoom;
			}
			set
			{
				this._zoom = value;
			}
		}
		public int range
		{
			get
			{
				return this._range;
			}
			set
			{
				this._range = value;
			}
		}
		public virtual object Get(int fieldPos)
		{
			switch (fieldPos)
			{
			case 0: return this.lat;
			case 1: return this.lon;
			case 2: return this.zoom;
			case 3: return this.range;
			default: throw new AvroRuntimeException("Bad index " + fieldPos + " in Get()");
			};
		}
		public virtual void Put(int fieldPos, object fieldValue)
		{
			switch (fieldPos)
			{
			case 0: this.lat = (System.Single)fieldValue; break;
			case 1: this.lon = (System.Single)fieldValue; break;
			case 2: this.zoom = (System.Int32)fieldValue; break;
			case 3: this.range = (System.Int32)fieldValue; break;
			default: throw new AvroRuntimeException("Bad index " + fieldPos + " in Put()");
			};
		}
	}
}
