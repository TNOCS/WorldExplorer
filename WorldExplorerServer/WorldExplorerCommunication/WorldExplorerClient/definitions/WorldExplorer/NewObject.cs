// ------------------------------------------------------------------------------
// <auto-generated>
//    Generated by avrogen, version 1.7.7.5
//    Changes to this file may cause incorrect behavior and will be lost if code
//    is regenerated
// </auto-generated>
// ------------------------------------------------------------------------------
namespace WorldExplorer
{
	using System;
	using System.Collections.Generic;
	using System.Text;
	using global::Avro;
	using global::Avro.Specific;
	
	public partial class NewObject : ISpecificRecord
	{
		public static Schema _SCHEMA = Schema.Parse(@"{""type"":""record"",""name"":""NewObject"",""namespace"":""WorldExplorer"",""fields"":[{""name"":""Name"",""type"":""string""},{""name"":""prefabname"",""type"":""string""},{""name"":""lat"",""type"":""double""},{""name"":""lon"",""type"":""double""},{""name"":""scaleX"",""type"":""float""},{""name"":""scaleY"",""type"":""float""},{""name"":""scaleZ"",""type"":""float""},{""name"":""rotX"",""type"":""float""},{""name"":""rotY"",""type"":""float""},{""name"":""rotZ"",""type"":""float""},{""name"":""centerPosX"",""type"":""float""},{""name"":""centerPosY"",""type"":""float""},{""name"":""centerPosZ"",""type"":""float""}]}");
		private string _Name;
		private string _prefabname;
		private double _lat;
		private double _lon;
		private float _scaleX;
		private float _scaleY;
		private float _scaleZ;
		private float _rotX;
		private float _rotY;
		private float _rotZ;
		private float _centerPosX;
		private float _centerPosY;
		private float _centerPosZ;
		public virtual Schema Schema
		{
			get
			{
				return NewObject._SCHEMA;
			}
		}
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				this._Name = value;
			}
		}
		public string prefabname
		{
			get
			{
				return this._prefabname;
			}
			set
			{
				this._prefabname = value;
			}
		}
		public double lat
		{
			get
			{
				return this._lat;
			}
			set
			{
				this._lat = value;
			}
		}
		public double lon
		{
			get
			{
				return this._lon;
			}
			set
			{
				this._lon = value;
			}
		}
		public float scaleX
		{
			get
			{
				return this._scaleX;
			}
			set
			{
				this._scaleX = value;
			}
		}
		public float scaleY
		{
			get
			{
				return this._scaleY;
			}
			set
			{
				this._scaleY = value;
			}
		}
		public float scaleZ
		{
			get
			{
				return this._scaleZ;
			}
			set
			{
				this._scaleZ = value;
			}
		}
		public float rotX
		{
			get
			{
				return this._rotX;
			}
			set
			{
				this._rotX = value;
			}
		}
		public float rotY
		{
			get
			{
				return this._rotY;
			}
			set
			{
				this._rotY = value;
			}
		}
		public float rotZ
		{
			get
			{
				return this._rotZ;
			}
			set
			{
				this._rotZ = value;
			}
		}
		public float centerPosX
		{
			get
			{
				return this._centerPosX;
			}
			set
			{
				this._centerPosX = value;
			}
		}
		public float centerPosY
		{
			get
			{
				return this._centerPosY;
			}
			set
			{
				this._centerPosY = value;
			}
		}
		public float centerPosZ
		{
			get
			{
				return this._centerPosZ;
			}
			set
			{
				this._centerPosZ = value;
			}
		}
		public virtual object Get(int fieldPos)
		{
			switch (fieldPos)
			{
			case 0: return this.Name;
			case 1: return this.prefabname;
			case 2: return this.lat;
			case 3: return this.lon;
			case 4: return this.scaleX;
			case 5: return this.scaleY;
			case 6: return this.scaleZ;
			case 7: return this.rotX;
			case 8: return this.rotY;
			case 9: return this.rotZ;
			case 10: return this.centerPosX;
			case 11: return this.centerPosY;
			case 12: return this.centerPosZ;
			default: throw new AvroRuntimeException("Bad index " + fieldPos + " in Get()");
			};
		}
		public virtual void Put(int fieldPos, object fieldValue)
		{
			switch (fieldPos)
			{
			case 0: this.Name = (System.String)fieldValue; break;
			case 1: this.prefabname = (System.String)fieldValue; break;
			case 2: this.lat = (System.Double)fieldValue; break;
			case 3: this.lon = (System.Double)fieldValue; break;
			case 4: this.scaleX = (System.Single)fieldValue; break;
			case 5: this.scaleY = (System.Single)fieldValue; break;
			case 6: this.scaleZ = (System.Single)fieldValue; break;
			case 7: this.rotX = (System.Single)fieldValue; break;
			case 8: this.rotY = (System.Single)fieldValue; break;
			case 9: this.rotZ = (System.Single)fieldValue; break;
			case 10: this.centerPosX = (System.Single)fieldValue; break;
			case 11: this.centerPosY = (System.Single)fieldValue; break;
			case 12: this.centerPosZ = (System.Single)fieldValue; break;
			default: throw new AvroRuntimeException("Bad index " + fieldPos + " in Put()");
			};
		}
	}
}
